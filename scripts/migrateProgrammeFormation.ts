import { PrismaClient } from '@prisma/client';
import * as fs from 'fs';
import * as path from 'path';

// Initialisation du client Prisma
const prisma = new PrismaClient();

// Structure des donn√©es du catalogue - Extrait de Catalogue.tsx
const categoriesFormations = [
  {
    id: "digital",
    titre: "Ma√Ætrisez les Bases du Digital",
    description: "Des formations essentielles pour d√©buter dans l'univers du digital et acqu√©rir des comp√©tences fondamentales.",
    formations: [
      {
        id: "A001-WP-DD",
        titre: "CR√âATION DE SON SITE INTERNET (WORDPRESS) + STRAT√âGIE DE D√âVELOPPEMENT DIGITAL",
        description: "Formation compl√®te pour cr√©er et g√©rer un site WordPress et d√©velopper une strat√©gie digitale efficace pour votre activit√©.",
        duree: "14 heures (2 jours)",
        prix: "980‚Ç¨",
        niveau: "D√©butant",
        participants: "Artisans, commer√ßants ou professions lib√©rales",
        objectifs: [
          "Cr√©er et personnaliser un site internet avec WordPress",
          "G√©rer le contenu et la structure du site",
          "D√©finir une strat√©gie de d√©veloppement digital",
          "Mettre en ≈ìuvre des actions SEO et r√©seaux sociaux"
        ],
        prerequis: "Ma√Ætriser son environnement et les fonctions de base pour utiliser un ordinateur",
        modalites: "Pr√©sentiel",
        tauxParticipation: "98%",
        tauxReussite: "94%",
        programmeUrl: "/programmes/A001-WP-DD-programme.html"
      },
      {
        id: "A010-WP-IM",
        titre: "CR√âER ET G√âRER UN SITE WORDPRESS & STRAT√âGIE DE CONTENU INBOUND MARKETING",
        description: "Apprenez √† cr√©er et g√©rer un site WordPress tout en d√©veloppant une strat√©gie de contenu efficace bas√©e sur l'Inbound Marketing.",
        duree: "14 heures (2 jours)",
        prix: "980‚Ç¨",
        niveau: "D√©butant",
        participants: "Artisans, commer√ßants ou professions lib√©rales",
        objectifs: [
          "Cr√©er et g√©rer un site WordPress",
          "D√©velopper une strat√©gie de contenu Inbound Marketing",
          "Attirer et convertir des prospects",
          "Mesurer les performances de votre strat√©gie"
        ],
        prerequis: "Ma√Ætriser son environnement et les fonctions de base pour utiliser un ordinateur",
        modalites: "Pr√©sentiel",
        tauxParticipation: "97%",
        tauxReussite: "93%",
        programmeUrl: "/programmes/A010-WP-IM-programme.html"
      },
      {
        id: "A015-IA-CGPT",
        titre: "G√âN√âRATION DE CONTENU AVEC CHATGPT + AUTOMATISATION MARKETING",
        description: "Ma√Ætrisez les techniques de g√©n√©ration de contenu avec ChatGPT et mettez en place des strat√©gies d'automatisation marketing efficaces.",
        duree: "14 heures (2 jours)",
        prix: "980‚Ç¨",
        niveau: "D√©butant √† interm√©diaire",
        participants: "Artisans, commer√ßants ou professions lib√©rales",
        objectifs: [
          "Comprendre les fondamentaux de ChatGPT",
          "Cr√©er des contenus optimis√©s pour le web et les r√©seaux sociaux",
          "Mettre en place des strat√©gies d'automatisation marketing",
          "Utiliser des outils comme ChatGPT, Brevo et Make"
        ],
        prerequis: "Ma√Ætriser son environnement et les fonctions de base pour utiliser un ordinateur",
        modalites: "Pr√©sentiel ou distanciel",
        tauxParticipation: "96%",
        tauxReussite: "92%",
        programmeUrl: "/programmes/A015-IA-CGPT-programme-optimise.html"
      },
      {
        id: "A016-RE-HL",
        titre: "BACKEND HEADLESS AVEC WORDPRESS ET FRONTEND REACT",
        description: "D√©veloppez des applications modernes en utilisant WordPress comme backend headless et React pour cr√©er des interfaces utilisateur dynamiques et performantes.",
        duree: "35 heures (5 jours)",
        prix: "2450‚Ç¨",
        niveau: "Avanc√©",
        participants: "D√©veloppeurs web, int√©grateurs, freelances",
        objectifs: [
          "Configurer WordPress comme API headless",
          "D√©velopper une application frontend avec React",
          "Connecter React √† l'API WordPress REST",
          "D√©ployer et maintenir une architecture headless"
        ],
        prerequis: "Connaissances en d√©veloppement web et notions de JavaScript",
        modalites: "Pr√©sentiel ou distanciel",
        tauxParticipation: "92%",
        tauxReussite: "88%",
        programmeUrl: "/programmes/A016-RE-HL-programme.html"
      }
    ]
  }
];

// Valeurs par d√©faut pour les champs obligatoires non pr√©sents dans le catalogue
const defaultFormationValues = {
  publicConcerne: "Artisans, commer√ßants, professions lib√©rales et TPE/PME",
  contenuDetailleJours: "Contenu d√©taill√© √† compl√©ter",
  modalitesAcces: "Inscription requise 2 semaines avant le d√©but de la formation",
  modalitesTechniques: "Ordinateur avec acc√®s internet, navigateur r√©cent",
  modalitesReglement: "Par virement, esp√®ces ou carte bancaire",
  formateur: "Aur√©lien Lien",
  ressourcesDisposition: "Support de cours, exercices pratiques, acc√®s √† une plateforme en ligne",
  modalitesEvaluation: "Exercices pratiques et QCM en fin de formation",
  sanctionFormation: "Attestation de formation",
  niveauCertification: "Non certifiante",
  delaiAcceptation: "15 jours avant le d√©but de la formation",
  accessibiliteHandicap: "Formation accessible aux personnes en situation de handicap. Contactez notre r√©f√©rent handicap pour adapter le parcours.",
  cessationAbandon: "En cas d'abandon, facturation des heures suivies. Report possible sur une session ult√©rieure.",
  pictogramme: "üíª",
};

/**
 * Fonction principale de migration
 */
async function migrateProgrammes() {
  try {
    console.log('D√©but de la migration des donn√©es vers ProgrammeFormation...');

    // 1. Importer les cat√©gories
    console.log('Migration des cat√©gories...');
    let totalCategories = 0;

    for (const categorie of categoriesFormations) {
      // V√©rifier si la cat√©gorie existe d√©j√†
      const existingCategorie = await prisma.categorieProgramme.findFirst({
        where: { code: categorie.id }
      });

      if (!existingCategorie) {
        // Cr√©er la cat√©gorie si elle n'existe pas
        await prisma.categorieProgramme.create({
          data: {
            code: categorie.id,
            titre: categorie.titre,
            description: categorie.description
          }
        });
        totalCategories++;
      }
    }

    console.log(`Total des cat√©gories import√©es : ${totalCategories}`);

    // 2. Migration des formations du catalogue
    console.log('\nMigration des formations du catalogue...');
    let totalImported = 0;

    for (const categorie of categoriesFormations) {
      console.log(`Traitement de la cat√©gorie: ${categorie.titre}`);
      
      // R√©cup√©rer l'ID de la cat√©gorie
      const categorieDB = await prisma.categorieProgramme.findFirst({
        where: { code: categorie.id }
      });
      
      if (!categorieDB) {
        console.log(`Cat√©gorie non trouv√©e pour ${categorie.id}, impossible d'importer ses formations`);
        continue;
      }
      
      const categorieId = categorieDB.id;

      for (const formation of categorie.formations) {
        // V√©rifier si le programme existe d√©j√†
        const existingProgramme = await prisma.programmeFormation.findFirst({
          where: { code: formation.id }
        });

        if (existingProgramme) {
          console.log(`Programme ${formation.id} existe d√©j√†, passage au suivant...`);
          continue;
        }

        // Cr√©er le programme
        await prisma.programmeFormation.create({
          data: {
            code: formation.id,
            type: "catalogue",
            titre: formation.titre,
            description: formation.description,
            duree: formation.duree,
            prix: formation.prix,
            niveau: formation.niveau,
            participants: formation.participants,
            objectifs: formation.objectifs,
            prerequis: formation.prerequis,
            modalites: formation.modalites,
            programmeUrl: formation.programmeUrl || null,
            categorieId: categorieId,
            // Valeurs par d√©faut pour les champs obligatoires
            ...defaultFormationValues,
            publicConcerne: formation.participants || defaultFormationValues.publicConcerne,
          }
        });

        console.log(`Programme import√©: ${formation.titre} (${formation.id})`);
        totalImported++;
      }
    }

    console.log(`\nTotal des programmes import√©s depuis le catalogue: ${totalImported}`);

    // 3. Migration des programmes personnalis√©s
    console.log('\nMigration des programmes personnalis√©s...');
    const programmesPersonnalises = await prisma.programmePersonnalise.findMany();
    let totalPersImported = 0;

    for (const programme of programmesPersonnalises) {
      // V√©rifier si le programme a d√©j√† √©t√© import√©
      const existingProgramme = await prisma.programmeFormation.findFirst({
        where: { 
          positionnementRequestId: programme.positionnementRequestId 
        }
      });

      if (existingProgramme) {
        console.log(`Programme personnalis√© li√© au positionnement ${programme.positionnementRequestId} existe d√©j√†, passage au suivant...`);
        continue;
      }

      // G√©n√©rer un code unique pour le programme personnalis√©
      const code = `P${String(programme.id).substring(0, 8)}`;

      try {
        // R√©cup√©rer la demande de positionnement
        const positionnement = await prisma.positionnementRequest.findUnique({
          where: { id: programme.positionnementRequestId || '' }
        });

        // Cr√©er le programme dans le nouveau mod√®le
        await prisma.programmeFormation.create({
          data: {
            code: code,
            type: "sur-mesure",
            titre: programme.titre,
            description: programme.description || 'Programme personnalis√©',
            duree: programme.duree || '14 heures',
            prix: programme.tarif || 'Sur devis',
            niveau: 'Adapt√©',
            participants: '1 √† 3 participants',
            objectifs: [],
            prerequis: programme.prerequis || '√Ä d√©finir avec le formateur',
            modalites: 'Pr√©sentiel et distanciel',
            contenuDetailleJours: defaultFormationValues.contenuDetailleJours,
            publicConcerne: defaultFormationValues.publicConcerne,
            positionnementRequestId: programme.positionnementRequestId,
            beneficiaireId: positionnement?.nomBeneficiaire ? `${positionnement.nomBeneficiaire} ${positionnement.prenomBeneficiaire}` : null,
            objectifsSpecifiques: null,
            // Valeurs par d√©faut pour les champs obligatoires
            ...defaultFormationValues
          }
        });

        console.log(`Programme personnalis√© import√©: ${programme.titre} (${code})`);
        totalPersImported++;
      } catch (error) {
        console.error(`Erreur lors de l'importation du programme personnalis√© ${programme.id}:`, error);
      }
    }

    console.log(`\nTotal des programmes personnalis√©s import√©s: ${totalPersImported}`);
    console.log('\nMigration termin√©e avec succ√®s!');

  } catch (error) {
    console.error('Erreur lors de la migration:', error);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter la migration
migrateProgrammes()
  .catch(e => {
    console.error('Erreur non g√©r√©e:', e);
    process.exit(1);
  });
